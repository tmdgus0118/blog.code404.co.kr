<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[qoohk]]></title><description><![CDATA[qoohk developer blog]]></description><link>http://blog.code404.co.kr</link><generator>RSS for Node</generator><lastBuildDate>Mon, 17 Oct 2016 07:37:12 GMT</lastBuildDate><atom:link href="http://blog.code404.co.kr/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[전봇대 문제]]></title><description><![CDATA[<div class="paragraph">
<p><a href="https://www.acmicpc.net/problem/8986">문제 바로가기</a></p>
</div>
<div class="paragraph">
<p><strong>풀이</strong></p>
</div>
<div class="paragraph">
<p>식으로 나타내자면 sum ( | X(i) - d * i | ) 값이 최소인 값인데</p>
</div>
<div class="paragraph">
<p>이것을 그래프로 그리면 아래쪽으로 볼록한 그래프가 나온다</p>
</div>
<div class="paragraph">
<p>아래쪽으로 볼록한 그래프는 이진탐색, 3진탐색으로 극소값을 찾을수 있다.</p>
</div>
<div class="paragraph">
<p>NlogN으로 풀리는 문제.</p>
</div>
<div class="paragraph">
<p>처음에는 도저히 모르겠는데</p>
</div>
<div class="paragraph">
<p>이런 비슷한 문제를 보면 우선적으로 그래프먼저 그려보는게 나을듯..</p>
</div>
<div class="paragraph">
<p><a href="http://ideone.com/i8JB4Y">정답소스</a></p>
</div>]]></description><link>http://blog.code404.co.kr/2016/10/17/algo-8986.html</link><guid isPermaLink="true">http://blog.code404.co.kr/2016/10/17/algo-8986.html</guid><category><![CDATA[알고리즘]]></category><category><![CDATA[영어]]></category><category><![CDATA[수학]]></category><pubDate>Mon, 17 Oct 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Full Tank 문제]]></title><description><![CDATA[<div class="paragraph">
<p><a href="https://www.acmicpc.net/problem/5057">문제로 바로가기</a></p>
</div>
<div class="paragraph">
<p>문제 번역</p>
</div>
<div class="paragraph">
<p><strong>문제</strong></p>
</div>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>올해 여름에 자동차 여행으로 유럽을 방문한 영수증에서, 너는 가스가격이 방문하는 도시마다 서로 다양하다는것을 알게되었다.
아마도 너가 어디서 연료를 채워야 할지를 좀 더 현명하게 정한다면, 돈을 좀 절약할수 있지 않을까?</p>
</div>
<div class="paragraph">
<p>다른 여행자들을 돕기위해(또 다음에 여행할때를 위해) , 너는 연료가 가장 싼 경로를 찾아주는 프로그램을 만드려고 한다.
모든 차들이 연료가 모두 빈 상태에서 출발하고, 같은 거리에서는 똑같은 연료가 소비된다고 가정한다.</p>
</div>
</div>
</div>
<div class="paragraph">
<p><strong>입력</strong></p>
</div>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>첫째줄에는 도시의 수(n)과 도로의 수(m) (1 &#8656; n &#8656; 1000 , 0 &#8656; m &#8656; 10000)이 입력된다. 다음 n줄은 각각 도시마다 연료의 가격 Pi ( 1&#8656; Pi &#8656; 100)가 입력된다.
그다음 m줄에는 줄마다 도시1(u), 도시2(v) , 도시1과 도시2사이의 거리(d)가 주어진다. (0 &#8656; u,v &lt; n , 1&#8656; d &#8656; 100)</p>
</div>
<div class="paragraph">
<p>그 다음줄에는 방문하고자 하는 여행자들의 수 (q)가 주어지고 (1&#8656; q &#8656; 100)
그 다음 q줄에는 각 줄마다 연료의 용량(c) 와 시작 도시 (s) 와 도착 도시(e)가 주어진다
( 1&#8656; c&#8656; 100, 0 &#8656; s,e &lt; n )</p>
</div>
</div>
</div>
<div class="paragraph">
<p><strong>출력</strong></p>
</div>
<div class="openblock">
<div class="content">
<div class="paragraph">
<p>각 여행자들마다 s에서 e로 갈때 연료 비용을 최소로 하는 경로의 총 연료비용을 출력한다.
만약 s에서 e로 갈 경로가 없을 경우 "impossible" 라고 출력한다.</p>
</div>
</div>
</div>
<div class="paragraph">
<p>다익스트라 알고리즘으로 해결할수 있다.</p>
</div>
<div class="paragraph">
<p>참조 <a href="https://namu.wiki/w/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC%20%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98" class="bare">https://namu.wiki/w/%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC%20%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98</a></p>
</div>
<div class="paragraph">
<p>물론 기본적인 다익스트라 알고리즘으론 안된다.</p>
</div>
<div class="paragraph">
<p>기본적인 다익스트라 알고리즘의 최소 비용배열이 1차원 배열이면</p>
</div>
<div class="paragraph">
<p>이 문제는 2차원 배열을 이용해야 한다.</p>
</div>
<div class="paragraph">
<p>다시말해, 다익스트라 알고리즘의 최소 비용배열을 d라고 하면</p>
</div>
<div class="paragraph">
<p>d[n]은 n 정점으로 가는 최소비용인데,</p>
</div>
<div class="paragraph">
<p>이 문제에서는 d[n][g] 라고 하면 n정점에서 g만큼의 연료가 채워져있을때의 최소비용이</p>
</div>
<div class="paragraph">
<p>라고 가정하고 문제를 풀어야한다.</p>
</div>
<div class="paragraph">
<p>문제답)</p>
</div>
<div class="paragraph">
<p><a href="http://ideone.com/UqSuEH#comments" class="bare">http://ideone.com/UqSuEH#comments</a></p>
</div>]]></description><link>http://blog.code404.co.kr/2016/10/14/full-tank.html</link><guid isPermaLink="true">http://blog.code404.co.kr/2016/10/14/full-tank.html</guid><pubDate>Fri, 14 Oct 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[grunt & browserify & babel을 이용해 es6을 써보자]]></title><description><![CDATA[<div class="paragraph">
<p>:hp-image:http://gruntjs.com/img/grunt-logo.png
:hp-alt-title: grunt-es2015</p>
</div>
<div class="paragraph">
<p>es6이 나온지 꽤나 됬다.</p>
</div>
<div class="paragraph">
<p>하지만 지원하는 거라 해봤자 node.js 나 크롬브라우저 뿐..</p>
</div>
<div class="paragraph">
<p>브라우저단에서 es6을 쓸수 있는 방법이 없을까?</p>
</div>
<div class="paragraph">
<p>해결방법은 grunt &amp; browserify를 쓰는 방법이 있다 ( gulp 나 )</p>
</div>
<div class="paragraph">
<p><strong>grunt란?</strong></p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://gruntjs.com/img/grunt-logo.png" alt="grunt logo.png">
</div>
</div>
<div class="paragraph">
<p>grunt는 Javascript Task Runner로써 gulp 와 똑같은 기능을 하는 놈인데</p>
</div>
<div class="paragraph">
<p>gulp보다 좀 더 직관적이다. ( 사실 비슷비슷하고 케바케.. )</p>
</div>
<div class="paragraph">
<p>필자는 gulp를 썼엇는데.. watch를 쓸때 windows에서 오류가 너무 많이 나서 grunt를 쓰고있다.</p>
</div>
<div class="paragraph">
<p>grunt를 이용하면 자바스크립트 자동 빌드도구를 만들수 있다.</p>
</div>
<div class="paragraph">
<p>예를들어, 자동으로 min.js를 만들어 준다던지</p>
</div>
<div class="paragraph">
<p>less &#8594; css , ts &#8594; js , coffee&#8594;js 등등 자동변환이라던지</p>
</div>
<div class="paragraph">
<p>편한 하는 기능들을 해주는 도구이다.</p>
</div>
<div class="paragraph">
<p>node 기반이며 npm을 이용하여 설치 가능하다.</p>
</div>
<div class="paragraph">
<p><strong>browserify란?</strong></p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://browserify.org/images/wizard_hat_blue.png" alt="wizard hat blue.png">
</div>
</div>
<div class="paragraph">
<p>browserify는 브라우저 단에서 node.js의 패키지 관리처럼 브라우저 단에서도 관리를 해줄수 있도록 하기위해 만든 것이다. 자매품은 webpack</p>
</div>
<div class="paragraph">
<p>말 그대로 브라우저 단에서 require을 쓸 수 있다.</p>
</div>
<div class="paragraph">
<p><a href="http://browserify.org/" class="bare">http://browserify.org/</a></p>
</div>
<div class="paragraph">
<p><strong>babel 이란?</strong></p>
</div>
<div class="paragraph">
<p>babel은 자바스크립트 다음 세대 버전을 쓸수있도록 해주는 transpiler라고 보면된다.</p>
</div>
<div class="paragraph">
<p>이를 이용하여 react jsx 나 es6 을 사용 할수가 있다.</p>
</div>
<div class="paragraph">
<p><a href="https://babeljs.io/" class="bare">https://babeljs.io/</a></p>
</div>
<div class="paragraph">
<p><strong>설치 및 설정</strong></p>
</div>
<div class="paragraph">
<p>npm이 설치되어 있지 않으면 <a href="https://nodejs.org/" class="bare">https://nodejs.org/</a> 에서 node를 설치하자.</p>
</div>
<div class="paragraph">
<p>우선 grunt-cli를 npm을 통하여 설치한다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install -g grunt-cli</pre>
</div>
</div>
<div class="paragraph">
<p>grunt를 동작시킬 폴더로 이동한뒤, npm을 통하여 grunt를 설치한다</p>
</div>
<div class="paragraph">
<p>npm init을 이용하여 package.json도 만들어 주면 좋다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>cd ~/grunt-test
npm install grunt --save-dev</pre>
</div>
</div>
<div class="paragraph">
<p>grunt-browserify, babel-preset-es2015 도 npm을 통해 설치한다</p>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install grunt-browserify babel-preset-es2015 --save-dev</pre>
</div>
</div>
<div class="paragraph">
<p>해당폴더에 .babelrc라는 파일을 만들어 다음과 같이 작성한다</p>
</div>
<div class="paragraph">
<p>이 파일은 babelify를 해줄때 설정하는 옵션파일이다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">{
    "presets" : ["es2015"]
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>이제 grunt 설정하면 되는데,</p>
</div>
<div class="paragraph">
<p>grunt는 실행시 gruntfile.js라는 파일을 실행한다</p>
</div>
<div class="paragraph">
<p>gruntfile.js는 다음과 같이 설정한다</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">	module.exports = function (grunt){
		grunt.initConfig({
        	pkg : grunt.file.readJSON('package.json'),
            browserify : {
            	js : {
                	files : {
                    	// 출력파일 : 소스파일
                    	"./release/js/app.js" : ["./js/index.js"]
                	}
            	}
           	}
       });
       grunt.loadNpmTasks('grunt-browserify');

       grunt.registerTask('default',['browserify']);
	}</code></pre>
</div>
</div>
<div class="paragraph">
<p>필자는 js폴더의 index.js을 기준으로 잡았다.</p>
</div>
<div class="paragraph">
<p>이렇게 이용하면 jQuery ,angular등등의 라이브러리도 npm을 통하여 다운받고 바로 추가가 가능하다.</p>
</div>
<div class="paragraph">
<p>index.js</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">	var $ = require('jQuery');
	if(window){
		// require 을 통하여 jQuery를 부르면 jQuery가 전역으로 설정이 안되서 직접 설정해준다.
		window.jQuery = $;
        window.$ = $;
	}</code></pre>
</div>
</div>
<div class="paragraph">
<p>grunt를 통하여 다른 작업도 가능하다</p>
</div>
<div class="paragraph">
<p>js uglify ( minify ) : <a href="https://github.com/gruntjs/grunt-contrib-uglify" class="bare">https://github.com/gruntjs/grunt-contrib-uglify</a></p>
</div>
<div class="paragraph">
<p>css min ( minify) : <a href="https://github.com/gruntjs/grunt-contrib-cssmin" class="bare">https://github.com/gruntjs/grunt-contrib-cssmin</a></p>
</div>
<div class="paragraph">
<p>concat : <a href="https://github.com/gruntjs/grunt-contrib-concat" class="bare">https://github.com/gruntjs/grunt-contrib-concat</a></p>
</div>
<div class="paragraph">
<p>watch : <a href="https://github.com/gruntjs/grunt-contrib-watch" class="bare">https://github.com/gruntjs/grunt-contrib-watch</a></p>
</div>]]></description><link>http://blog.code404.co.kr/2016/10/12/grunt-browserify-babel-es6.html</link><guid isPermaLink="true">http://blog.code404.co.kr/2016/10/12/grunt-browserify-babel-es6.html</guid><pubDate>Wed, 12 Oct 2016 00:00:00 GMT</pubDate></item></channel></rss>