<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Untitled RSS Feed]]></title><description><![CDATA[Untitled RSS Feed]]></description><link>https://tmdgus0118.github.io/blog.code404.co.kr</link><generator>RSS for Node</generator><lastBuildDate>Fri, 14 Oct 2016 06:07:56 GMT</lastBuildDate><atom:link href="https://tmdgus0118.github.io/blog.code404.co.kr/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[grunt & browserify & babel을 이용해 es6을 써보자]]></title><description><![CDATA[<div class="paragraph">
<p>es6이 나온지 꽤나 됬다.</p>
</div>
<div class="paragraph">
<p>하지만 지원하는 거라 해봤자 node.js 나 크롬브라우저 뿐..</p>
</div>
<div class="paragraph">
<p>브라우저단에서 es6을 쓸수 있는 방법이 없을까?</p>
</div>
<div class="paragraph">
<p>해결방법은 grunt &amp; browserify를 쓰는 방법이 있다 ( gulp 나 )</p>
</div>
<div class="paragraph">
<p><strong>grunt란?</strong></p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://gruntjs.com/img/grunt-logo.png" alt="grunt logo.png">
</div>
</div>
<div class="paragraph">
<p>grunt는 Javascript Task Runner로써 gulp 와 똑같은 기능을 하는 놈인데</p>
</div>
<div class="paragraph">
<p>gulp보다 좀 더 직관적이다. ( 사실 비슷비슷하고 케바케.. )</p>
</div>
<div class="paragraph">
<p>필자는 gulp를 썼엇는데.. watch를 쓸때 windows에서 오류가 너무 많이 나서 grunt를 쓰고있다.</p>
</div>
<div class="paragraph">
<p>grunt를 이용하면 자바스크립트 자동 빌드도구를 만들수 있다.</p>
</div>
<div class="paragraph">
<p>예를들어, 자동으로 min.js를 만들어 준다던지</p>
</div>
<div class="paragraph">
<p>less &#8594; css , ts &#8594; js , coffee&#8594;js 등등 자동변환이라던지</p>
</div>
<div class="paragraph">
<p>편한 하는 기능들을 해주는 도구이다.</p>
</div>
<div class="paragraph">
<p>node 기반이며 npm을 이용하여 설치 가능하다.</p>
</div>
<div class="paragraph">
<p><strong>browserify란?</strong></p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://browserify.org/images/wizard_hat_blue.png" alt="wizard hat blue.png">
</div>
</div>
<div class="paragraph">
<p>browserify는 브라우저 단에서 node.js의 패키지 관리처럼 브라우저 단에서도 관리를 해줄수 있도록 하기위해 만든 것이다. 자매품은 webpack</p>
</div>
<div class="paragraph">
<p>말 그대로 브라우저 단에서 require을 쓸 수 있다.</p>
</div>
<div class="paragraph">
<p><a href="http://browserify.org/" class="bare">http://browserify.org/</a></p>
</div>
<div class="paragraph">
<p><strong>babel 이란?</strong></p>
</div>
<div class="paragraph">
<p>babel은 자바스크립트 다음 세대 버전을 쓸수있도록 해주는 transpiler라고 보면된다.</p>
</div>
<div class="paragraph">
<p>이를 이용하여 react jsx 나 es6 을 사용 할수가 있다.</p>
</div>
<div class="paragraph">
<p><a href="https://babeljs.io/" class="bare">https://babeljs.io/</a></p>
</div>
<div class="paragraph">
<p><strong>설치 및 설정</strong></p>
</div>
<div class="paragraph">
<p>npm이 설치되어 있지 않으면 <a href="https://nodejs.org/" class="bare">https://nodejs.org/</a> 에서 node를 설치하자.</p>
</div>
<div class="paragraph">
<p>우선 grunt-cli를 npm을 통하여 설치한다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install -g grunt-cli</pre>
</div>
</div>
<div class="paragraph">
<p>grunt를 동작시킬 폴더로 이동한뒤, npm을 통하여 grunt를 설치한다</p>
</div>
<div class="paragraph">
<p>npm init을 이용하여 package.json도 만들어 주면 좋다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre>cd ~/grunt-test
npm install grunt --save-dev</pre>
</div>
</div>
<div class="paragraph">
<p>grunt-browserify, babel-preset-es2015 도 npm을 통해 설치한다</p>
</div>
<div class="listingblock">
<div class="content">
<pre>npm install grunt-browserify babel-preset-es2015 --save-dev</pre>
</div>
</div>
<div class="paragraph">
<p>해당폴더에 .babelrc라는 파일을 만들어 다음과 같이 작성한다</p>
</div>
<div class="paragraph">
<p>이 파일은 babelify를 해줄때 설정하는 옵션파일이다.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">{
    "presets" : ["es2015"]
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>이제 grunt 설정하면 되는데,</p>
</div>
<div class="paragraph">
<p>grunt는 실행시 gruntfile.js라는 파일을 실행한다</p>
</div>
<div class="paragraph">
<p>gruntfile.js는 다음과 같이 설정한다</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">	module.exports = function (grunt){
		grunt.initConfig({
        	pkg : grunt.file.readJSON('package.json'),
            browserify : {
            	js : {
                	files : {
                    	// 출력파일 : 소스파일
                    	"./release/js/app.js" : ["./js/index.js"]
                	}
            	}
           	}
       });
       grunt.loadNpmTasks('grunt-browserify');

       grunt.registerTask('default',['browserify']);
	}</code></pre>
</div>
</div>
<div class="paragraph">
<p>필자는 js폴더의 index.js을 기준으로 잡았다.</p>
</div>
<div class="paragraph">
<p>이렇게 이용하면 jQuery ,angular등등의 라이브러리도 npm을 통하여 다운받고 바로 추가가 가능하다.</p>
</div>
<div class="paragraph">
<p>index.js</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">	var $ = require('jQuery');
	if(window){
		// require 을 통하여 jQuery를 부르면 jQuery가 전역으로 설정이 안되서 직접 설정해준다.
		window.jQuery = $;
        window.$ = $;
	}</code></pre>
</div>
</div>
<div class="paragraph">
<p>grunt를 통하여 다른 작업도 가능하다</p>
</div>
<div class="paragraph">
<p>js uglify ( minify ) : <a href="https://github.com/gruntjs/grunt-contrib-uglify" class="bare">https://github.com/gruntjs/grunt-contrib-uglify</a></p>
</div>
<div class="paragraph">
<p>css min ( minify) : <a href="https://github.com/gruntjs/grunt-contrib-cssmin" class="bare">https://github.com/gruntjs/grunt-contrib-cssmin</a></p>
</div>
<div class="paragraph">
<p>concat : <a href="https://github.com/gruntjs/grunt-contrib-concat" class="bare">https://github.com/gruntjs/grunt-contrib-concat</a></p>
</div>
<div class="paragraph">
<p>watch : <a href="https://github.com/gruntjs/grunt-contrib-watch" class="bare">https://github.com/gruntjs/grunt-contrib-watch</a></p>
</div>]]></description><link>https://tmdgus0118.github.io/blog.code404.co.kr/2016/10/12/grunt-es2015.html</link><guid isPermaLink="true">https://tmdgus0118.github.io/blog.code404.co.kr/2016/10/12/grunt-es2015.html</guid><category><![CDATA[grunt]]></category><category><![CDATA[browserify]]></category><category><![CDATA[babel]]></category><category><![CDATA[node]]></category><category><![CDATA[javascript]]></category><pubDate>Wed, 12 Oct 2016 00:00:00 GMT</pubDate></item></channel></rss>